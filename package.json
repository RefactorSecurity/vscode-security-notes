{
  "name": "security-notes",
  "displayName": "Security Notes",
  "description": "Create notes during a security code review. Import your favorite SAST tool results and collaborate with others.",
  "icon": "resources/security_notes_logo.png",
  "version": "0.0.1",
  "publisher": "Refactor Security",
  "private": true,
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/RefactorSecurity/vscode-security-notes"
  },
  "engines": {
    "vscode": "^1.65.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "security-notes.createNote",
        "title": "Create Note",
        "enablement": "!commentIsEmpty"
      },
      {
        "command": "security-notes.replyNoteComment",
        "title": "Reply",
        "enablement": "!commentIsEmpty"
      },
      {
        "command": "security-notes.editNoteComment",
        "title": "Edit",
        "icon": {
          "dark": "resources/edit_inverse.svg",
          "light": "resources/edit.svg"
        }
      },
      {
        "command": "security-notes.deleteNote",
        "title": "Delete",
        "icon": {
          "dark": "resources/close_inverse.svg",
          "light": "resources/close.svg"
        }
      },
      {
        "command": "security-notes.deleteNoteComment",
        "title": "Delete",
        "icon": {
          "dark": "resources/close_inverse.svg",
          "light": "resources/close.svg"
        }
      },
      {
        "command": "security-notes.saveEditNoteComment",
        "title": "Save"
      },
      {
        "command": "security-notes.cancelEditNoteComment",
        "title": "Cancel"
      },
      {
        "command": "security-notes.setNoteStatusVulnerable",
        "title": "Mark as Vulnerable"
      },
      {
        "command": "security-notes.setNoteStatusNotVulnerable",
        "title": "Mark as Not Vulnerable"
      },
      {
        "command": "security-notes.setNoteStatusToDo",
        "title": "Mark as To-Do"
      }
    ],
    "configuration": {
      "title": "Security Notes",
      "properties": {
        "security-notes.authorName": {
          "type": "string",
          "description": "Author name for comments.",
          "default": "User"
        },
        "security-notes.localDatabase": {
          "type": "string",
          "description": "Local database file path.",
          "default": ".security-notes.json"
        },
        "security-notes.collab.enabled": {
          "type": "boolean",
          "description": "Enable collaboration via RethinkDB.",
          "default": false
        },
        "security-notes.collab.host": {
          "type": "string",
          "description": "Hostname for the RethinkDB connection.",
          "default": "localhost"
        },
        "security-notes.collab.port": {
          "type": "number",
          "description": "Port number for the RethinkDB connection.",
          "default": 28015
        },
        "security-notes.collab.database": {
          "type": "string",
          "description": "Name of the RethinkDB database.",
          "default": "security-notes"
        },
        "security-notes.collab.username": {
          "type": "string",
          "description": "Username for the RethinkDB connection.",
          "default": "admin"
        },
        "security-notes.collab.password": {
          "type": "string",
          "description": "Password for the RethinkDB connection.",
          "default": ""
        },
        "security-notes.collab.ssl": {
          "type": "string",
          "description": "SSL/TLS certificate file path for the RethinkDB connection (optional).",
          "default": ""
        },
        "security-notes.collab.projectName": {
          "type": "string",
          "description": "Project name used as the RethinkDB table.",
          "default": "project"
        }
      }
    },
    "menus": {
      "commandPalette": [
        {
          "command": "security-notes.createNote",
          "when": "false"
        },
        {
          "command": "security-notes.replyNoteComment",
          "when": "false"
        },
        {
          "command": "security-notes.deleteNote",
          "when": "false"
        },
        {
          "command": "security-notes.deleteNoteComment",
          "when": "false"
        },
        {
          "command": "security-notes.setNoteStatusVulnerable",
          "when": "false"
        },
        {
          "command": "security-notes.setNoteStatusNotVulnerable",
          "when": "false"
        },
        {
          "command": "security-notes.setNoteStatusToDo",
          "when": "false"
        }
      ],
      "comments/commentThread/title": [
        {
          "command": "security-notes.deleteNote",
          "group": "navigation",
          "when": "commentController == security-notes && !commentThreadIsEmpty"
        }
      ],
      "comments/commentThread/context": [
        {
          "command": "security-notes.createNote",
          "group": "inline",
          "when": "commentController == security-notes && commentThreadIsEmpty"
        },
        {
          "command": "security-notes.setNoteStatusVulnerable",
          "group": "inline@4",
          "when": "commentController == security-notes && !commentThreadIsEmpty"
        },
        {
          "command": "security-notes.setNoteStatusNotVulnerable",
          "group": "inline@3",
          "when": "commentController == security-notes && !commentThreadIsEmpty"
        },
        {
          "command": "security-notes.setNoteStatusToDo",
          "group": "inline@2",
          "when": "commentController == security-notes && !commentThreadIsEmpty"
        },
        {
          "command": "security-notes.replyNoteComment",
          "group": "inline@1",
          "when": "commentController == security-notes && !commentThreadIsEmpty"
        }
      ],
      "comments/comment/title": [
        {
          "command": "security-notes.editNoteComment",
          "group": "group@1",
          "when": "commentController == security-notes"
        },
        {
          "command": "security-notes.deleteNoteComment",
          "group": "group@2",
          "when": "commentController == security-notes && comment == canDelete"
        }
      ],
      "comments/comment/context": [
        {
          "command": "security-notes.cancelEditNoteComment",
          "group": "inline@1",
          "when": "commentController == security-notes"
        },
        {
          "command": "security-notes.saveEditNoteComment",
          "group": "inline@2",
          "when": "commentController == security-notes"
        }
      ]
    },
    "views": {
      "view-container": [
        {
          "type": "webview",
          "name": "Import Tool Results",
          "id": "import-tool-results-view"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "view-container",
          "title": "Security Notes",
          "icon": "resources/security_notes_icon.svg"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint \"src/**/*.ts\""
  },
  "devDependencies": {
    "@types/node": "^16.11.7",
    "@types/rethinkdb": "^2.3.17",
    "@types/vscode": "~1.65.0",
    "@typescript-eslint/eslint-plugin": "^5.42.0",
    "@typescript-eslint/parser": "^5.42.0",
    "eslint": "^8.32.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^8.6.0",
    "prettier-linter-helpers": "^1.0.0",
    "typescript": "^4.8.4"
  },
  "dependencies": {
    "@types/uuid": "^9.0.0",
    "rethinkdb": "^2.4.2",
    "uuid": "^9.0.0"
  }
}
